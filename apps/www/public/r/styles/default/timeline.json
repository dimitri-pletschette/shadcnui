{
  "name": "timeline",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/timeline.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Timeline = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => <div {...props} ref={ref} />)\nTimeline.displayName = \"Timeline\"\n\nconst TimelineItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div {...props} ref={ref} className={cn(\"flex gap-x-3\", className)} />\n))\nTimelineItem.displayName = \"TimelineItem\"\n\nconst TimelineItemLabel = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"ps-2 my-2 first:mt-0\">\n    <h3\n      {...props}\n      ref={ref}\n      className={cn(\n        \"text-xs font-medium uppercase text-muted-foreground\",\n        className\n      )}\n    />\n  </div>\n))\nTimelineItemLabel.displayName = \"TimelineItemLabel\"\n\nexport interface TimelineConnectorProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  hideLine?: boolean\n}\n\nconst TimelineConnector = React.forwardRef<\n  HTMLDivElement,\n  TimelineConnectorProps\n>(({ className, hideLine, ...props }, ref) => (\n  <div\n    {...props}\n    ref={ref}\n    className={cn(\n      !hideLine &&\n        \"relative last:after:hidden after:absolute after:top-7 after:bottom-0 after:start-3.5 after:w-px after:-translate-x-[0.5px] after:bg-input\",\n      className\n    )}\n  />\n))\nTimelineConnector.displayName = \"TimelineConnector\"\n\nconst timelineDotVariants = cva(\n  \"flex shrink-0 justify-center items-center rounded-full\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground\",\n        destructive: \"bg-destructive text-destructive-foreground\",\n        outline: \"border border-input bg-background\",\n        secondary: \"bg-secondary text-secondary-foreground\",\n        accent: \"bg-accent text-accent-foreground\",\n      },\n      size: {\n        default: \"w-6 h-6\",\n        sm: \"w-4 h-4\",\n        lg: \"w-10 h-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface TimelineDotProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof timelineDotVariants> {}\n\nconst TimelineDot = React.forwardRef<HTMLDivElement, TimelineDotProps>(\n  ({ className, variant, size, ...props }, ref) => (\n    <div className=\"relative z-10 w-7 h-7 flex justify-center items-center\">\n      <div\n        {...props}\n        ref={ref}\n        className={cn(timelineDotVariants({ variant, size, className }))}\n      />\n    </div>\n  )\n)\nTimelineDot.displayName = \"TimelineDot\"\n\nconst TimelineContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div {...props} ref={ref} className={cn(\"grow pt-0.5 pb-8\", className)} />\n))\nTimelineContent.displayName = \"TimelineContent\"\n\nconst TimelineContentLabel = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    {...props}\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n  />\n))\nTimelineContentLabel.displayName = \"TimelineContentLabel\"\n\nconst TimelineContentDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    {...props}\n    ref={ref}\n    className={cn(\"mt-1 text-sm text-muted-foreground\", className)}\n  />\n))\nTimelineContentDescription.displayName = \"TimelineContentDescription\"\n\nexport {\n  Timeline,\n  TimelineItem,\n  TimelineItemLabel,\n  TimelineConnector,\n  TimelineDot,\n  timelineDotVariants,\n  TimelineContent,\n  TimelineContentLabel,\n  TimelineContentDescription,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}