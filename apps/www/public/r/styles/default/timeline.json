{
  "name": "timeline",
  "type": "registry:ui",
  "registryDependencies": [
    "timeline-demo"
  ],
  "files": [
    {
      "path": "ui/timeline.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TimelineDirectionContext = React.createContext<\"horizontal\" | \"vertical\">(\n  \"vertical\"\n)\n\nconst Timeline = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    direction?: \"horizontal\" | \"vertical\"\n  }\n>(({ className, direction = \"vertical\", ...props }, ref) => (\n  <TimelineDirectionContext.Provider value={direction}>\n    <div\n      ref={ref}\n      className={cn(\n        direction === \"vertical\" ? \"space-y-4\" : \"flex space-x-4\",\n        className\n      )}\n      {...props}\n    />\n  </TimelineDirectionContext.Provider>\n))\nTimeline.displayName = \"Timeline\"\n\nconst TimelineItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const direction = React.useContext(TimelineDirectionContext)\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        direction === \"vertical\" ? \"relative pl-8\" : \"relative pb-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nTimelineItem.displayName = \"TimelineItem\"\n\nconst TimelineDot = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    variant?: \"default\" | \"success\" | \"error\" | \"warning\"\n  }\n>(({ className, variant = \"default\", ...props }, ref) => {\n  const direction = React.useContext(TimelineDirectionContext)\n  return (\n  <div\n    ref={ref}\n    className={cn(\n      direction === \"vertical\" ? \"absolute left-0 top-2\" : \"absolute left-[0.5px] top-0\",\n      \"flex h-3 w-3 items-center justify-center rounded-full border\",\n      {\n        \"bg-background border-primary\": variant === \"default\",\n        \"bg-green-50 border-green-600\": variant === \"success\",\n        \"bg-red-50 border-red-600\": variant === \"error\",\n        \"bg-yellow-50 border-yellow-600\": variant === \"warning\",\n      },\n      className\n    )}\n    {...props}\n  />\n)})\nTimelineDot.displayName = \"TimelineDot\"\n\nconst TimelineConnector = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const direction = React.useContext(TimelineDirectionContext)\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        direction === \"vertical\"\n          ? \"absolute -bottom-4 left-1.5 top-5 h-full w-[1px] bg-border\"\n          : \"absolute -right-4 left-[14px] top-1.5 h-[1px] bg-border\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nTimelineConnector.displayName = \"TimelineConnector\"\n\nconst TimelineContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const direction = React.useContext(TimelineDirectionContext)\n  return (\n  <div\n    ref={ref}\n    className={cn(\n      direction === \"vertical\" ? \"pt-1\" : \"pt-5\",\n      className\n    )}\n    {...props}\n  />\n)})\nTimelineContent.displayName = \"TimelineContent\"\n\nexport {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}